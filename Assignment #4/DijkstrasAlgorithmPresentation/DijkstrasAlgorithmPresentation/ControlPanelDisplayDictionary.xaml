<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DijkstrasAlgorithmPresentation">
    <sys:Double x:Key="DotRadius">20</sys:Double>
    <DataTemplate x:Key="ControlPanelVertexPanel" DataType="{x:Type local:Vertex}">
        <DataTemplate.Resources>
            <local:ColorSelectionToIsCheckedConverter x:Key="ColorConverter"/>
            <local:RadiusSelectionToIsCheckedConverter x:Key="RadiusConverter"/>
        </DataTemplate.Resources>
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>Vertex No. </TextBlock>
                <TextBlock Text="{Binding id}"/>
            </StackPanel>
            <GroupBox Header="Select a color for this Vertex">
                <StackPanel>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Red}">Red</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Green}">Green</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Blue}">Blue</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Black}">Black</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=White}">White</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Cyan}">Cyan</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Brown}">Brown</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Pink}">Pink</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Yellow}">Yellow</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Aqua}">Aqua</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Gray}">Gray</RadioButton>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Select a radius for this Vertex">
                <StackPanel>
                    <RadioButton IsChecked="{Binding Path=radius, Converter={StaticResource RadiusConverter}, ConverterParameter=15}">Small</RadioButton>
                    <RadioButton IsChecked="{Binding Path=radius, Converter={StaticResource RadiusConverter}, ConverterParameter=20}">Medium</RadioButton>
                    <RadioButton IsChecked="{Binding Path=radius, Converter={StaticResource RadiusConverter}, ConverterParameter=30}">Large</RadioButton>
                    <RadioButton IsChecked="{Binding Path=radius, Converter={StaticResource RadiusConverter}, ConverterParameter=40}">Super Large</RadioButton>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="ControlPanelEdgePanel" DataType="{x:Type local:Edge}">
        <DataTemplate.Resources>
            <local:ColorSelectionToIsCheckedConverter x:Key="ColorConverter"/>
            <local:PositiveDoubleToPersistantStringConverter x:Key="SmartConverter"/>
        </DataTemplate.Resources>
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>Edge No.</TextBlock>
                <TextBlock Text="{Binding id}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>Starts from Vertex No.</TextBlock>
                <TextBlock Text="{Binding start.id}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock>And edge to Vertex No.</TextBlock>
                <TextBlock Text="{Binding end.id}"/>
            </StackPanel>
            <GroupBox Header="Select a color for this Edge.">
                <StackPanel>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Red}">Red</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Green}">Green</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Blue}">Blue</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Black}">Black</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=White}">White</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Cyan}">Cyan</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Brown}">Brown</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Pink}">Pink</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Yellow}">Yellow</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Aqua}">Aqua</RadioButton>
                    <RadioButton IsChecked="{Binding Path=color, Converter={StaticResource ColorConverter}, ConverterParameter=Gray}">Gray</RadioButton>
                </StackPanel>
            </GroupBox>
            <TextBlock>Set the weight of this edge.</TextBlock>
            <TextBox Text="{Binding weight, Converter={StaticResource SmartConverter}, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="VertexNode" DataType="{x:Type local:Vertex}">
        <DataTemplate.Resources>
            <local:ColorSelectionToIsCheckedConverter x:Key="ColorConverter"/>
        </DataTemplate.Resources>
        <Grid>
            <Ellipse Width="{Binding radius}" Height="{Binding radius}">
                <Ellipse.Fill>
                    <SolidColorBrush Color="{Binding color}"/>
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Text="{Binding id}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EdgePresent" DataType="{x:Type local:EdgeViewModelClass}">
        <DataTemplate.Resources>
            <local:UIElementToXConverter x:Key="ElementToX"/>
            <local:UIElementToYConverter x:Key="ElementToY"/>
            <local:MarginMakerConverter x:Key="marginMakerConverter"/>
        </DataTemplate.Resources>
        <Grid>
            <Line X1="{Binding X1}"
                  Y1="{Binding Y1}"
                  X2="{Binding X2}"
                  Y2="{Binding Y2}" 
                  StrokeThickness="2">
                <Line.Stroke>
                    <SolidColorBrush Color="{Binding edge.color}"/>
                </Line.Stroke>
            </Line>
            <TextBlock Text="{Binding edge.weight}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock.Margin>
                    <MultiBinding Converter="{StaticResource marginMakerConverter}">
                        <Binding Path="LeftEdgeHere"/>
                        <Binding Path="TopEdgeHere"/>
                    </MultiBinding>
                </TextBlock.Margin>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <local:IsNullToVisibilityConverter x:Key="IsNullToVisibilityConverter"/>
</ResourceDictionary>
